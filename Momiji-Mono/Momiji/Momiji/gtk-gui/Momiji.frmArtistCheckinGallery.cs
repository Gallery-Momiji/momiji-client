
// This file has been generated by the GUI designer. Do not modify.
namespace Momiji
{
	public partial class frmArtistCheckinGallery
	{
		private global::Gtk.HBox hboxCheckin;
		private global::Gtk.ScrolledWindow GtkScrolWinMerch;
		private global::Gtk.NodeView lstMerch;
		private global::Gtk.VBox vboxInfo;
		private global::Gtk.HBox hboxArtistInfo;
		private global::Gtk.Label lblANNo;
		private global::Gtk.Label lblArtistID;
		private global::Gtk.Label lblANName;
		private global::Gtk.Label lblArtistName;
		private global::Gtk.Label lblMatch;
		private global::Gtk.CheckButton chkMatch;
		private global::Gtk.Label lblBinder;
		private global::Gtk.CheckButton chkBinder;
		private global::Gtk.Label lblGSCS;
		private global::Gtk.HBox hboxButtons;
		private global::Gtk.Table tableButtons;
		private global::Gtk.Button btnCheckIn;
		private global::Gtk.Button btnEdit;
		private global::Gtk.Button btnRefresh;
		private global::Gtk.CheckButton chkGSCS;
		
		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Momiji.frmArtistCheckinGallery
			this.WidthRequest = 900;
			this.HeightRequest = 0;
			this.Name = "Momiji.frmArtistCheckinGallery";
			this.Title = global::Mono.Unix.Catalog.GetString ("frmArtistCheckinGallery");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			// Container child Momiji.frmArtistCheckinGallery.Gtk.Container+ContainerChild
			this.hboxCheckin = new global::Gtk.HBox ();
			this.hboxCheckin.Name = "hboxCheckin";
			this.hboxCheckin.Spacing = 6;
			// Container child hboxCheckin.Gtk.Box+BoxChild
			this.GtkScrolWinMerch = new global::Gtk.ScrolledWindow ();
			this.GtkScrolWinMerch.Name = "GtkScrolWinMerch";
			this.GtkScrolWinMerch.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolWinMerch.Gtk.Container+ContainerChild
			this.lstMerch = new global::Gtk.NodeView ();
			this.lstMerch.CanFocus = true;
			this.lstMerch.Name = "lstMerch";
			this.lstMerch.EnableSearch = false;
			this.GtkScrolWinMerch.Add (this.lstMerch);
			this.hboxCheckin.Add (this.GtkScrolWinMerch);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hboxCheckin [this.GtkScrolWinMerch]));
			w2.Position = 0;
			// Container child hboxCheckin.Gtk.Box+BoxChild
			this.vboxInfo = new global::Gtk.VBox ();
			this.vboxInfo.WidthRequest = 330;
			this.vboxInfo.Name = "vboxInfo";
			this.vboxInfo.Spacing = 6;
			// Container child vboxInfo.Gtk.Box+BoxChild
			this.hboxArtistInfo = new global::Gtk.HBox ();
			this.hboxArtistInfo.Name = "hboxArtistInfo";
			this.hboxArtistInfo.Spacing = 6;
			// Container child hboxArtistInfo.Gtk.Box+BoxChild
			this.lblANNo = new global::Gtk.Label ();
			this.lblANNo.Name = "lblANNo";
			this.lblANNo.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Artist # :</b>");
			this.lblANNo.UseMarkup = true;
			this.hboxArtistInfo.Add (this.lblANNo);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hboxArtistInfo [this.lblANNo]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			// Container child hboxArtistInfo.Gtk.Box+BoxChild
			this.lblArtistID = new global::Gtk.Label ();
			this.lblArtistID.Name = "lblArtistID";
			this.lblArtistID.LabelProp = global::Mono.Unix.Catalog.GetString ("N/A");
			this.hboxArtistInfo.Add (this.lblArtistID);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hboxArtistInfo [this.lblArtistID]));
			w4.Position = 1;
			w4.Fill = false;
			// Container child hboxArtistInfo.Gtk.Box+BoxChild
			this.lblANName = new global::Gtk.Label ();
			this.lblANName.Name = "lblANName";
			this.lblANName.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Artist Name :</b>");
			this.lblANName.UseMarkup = true;
			this.hboxArtistInfo.Add (this.lblANName);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.hboxArtistInfo [this.lblANName]));
			w5.Position = 2;
			w5.Expand = false;
			w5.Fill = false;
			// Container child hboxArtistInfo.Gtk.Box+BoxChild
			this.lblArtistName = new global::Gtk.Label ();
			this.lblArtistName.Name = "lblArtistName";
			this.lblArtistName.LabelProp = global::Mono.Unix.Catalog.GetString ("N/A");
			this.hboxArtistInfo.Add (this.lblArtistName);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.hboxArtistInfo [this.lblArtistName]));
			w6.Position = 3;
			w6.Fill = false;
			this.vboxInfo.Add (this.hboxArtistInfo);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vboxInfo [this.hboxArtistInfo]));
			w7.Position = 0;
			w7.Fill = false;
			// Container child vboxInfo.Gtk.Box+BoxChild
			this.lblMatch = new global::Gtk.Label ();
			this.lblMatch.Name = "lblMatch";
			this.lblMatch.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Have you confirmed with the artist that our \ninformation matches theirs?</b>");
			this.lblMatch.UseMarkup = true;
			this.vboxInfo.Add (this.lblMatch);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vboxInfo [this.lblMatch]));
			w8.Position = 1;
			w8.Expand = false;
			w8.Fill = false;
			// Container child vboxInfo.Gtk.Box+BoxChild
			this.chkMatch = new global::Gtk.CheckButton ();
			this.chkMatch.CanFocus = true;
			this.chkMatch.Name = "chkMatch";
			this.chkMatch.Label = global::Mono.Unix.Catalog.GetString ("Yes");
			this.chkMatch.DrawIndicator = true;
			this.chkMatch.UseUnderline = true;
			this.vboxInfo.Add (this.chkMatch);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.vboxInfo [this.chkMatch]));
			w9.Position = 2;
			w9.Expand = false;
			w9.Fill = false;
			// Container child vboxInfo.Gtk.Box+BoxChild
			this.lblBinder = new global::Gtk.Label ();
			this.lblBinder.Name = "lblBinder";
			this.lblBinder.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Have all prints been put in a binder \nand identified?</b>");
			this.lblBinder.UseMarkup = true;
			this.vboxInfo.Add (this.lblBinder);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.vboxInfo [this.lblBinder]));
			w10.Position = 3;
			w10.Expand = false;
			w10.Fill = false;
			// Container child vboxInfo.Gtk.Box+BoxChild
			this.chkBinder = new global::Gtk.CheckButton ();
			this.chkBinder.CanFocus = true;
			this.chkBinder.Name = "chkBinder";
			this.chkBinder.Label = global::Mono.Unix.Catalog.GetString ("Yes");
			this.chkBinder.DrawIndicator = true;
			this.chkBinder.UseUnderline = true;
			this.vboxInfo.Add (this.chkBinder);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.vboxInfo [this.chkBinder]));
			w11.Position = 4;
			w11.Expand = false;
			w11.Fill = false;
			// Container child vboxInfo.Gtk.Box+BoxChild
			this.lblGSCS = new global::Gtk.Label ();
			this.lblGSCS.Name = "lblGSCS";
			this.lblGSCS.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Have you and the artist signed the Gallery \nStore Control Sheet?</b>");
			this.lblGSCS.UseMarkup = true;
			this.vboxInfo.Add (this.lblGSCS);
			global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.vboxInfo [this.lblGSCS]));
			w12.Position = 5;
			w12.Expand = false;
			w12.Fill = false;
			// Container child vboxInfo.Gtk.Box+BoxChild
			this.hboxButtons = new global::Gtk.HBox ();
			this.hboxButtons.Name = "hboxButtons";
			this.hboxButtons.Spacing = 6;
			// Container child hboxButtons.Gtk.Box+BoxChild
			this.tableButtons = new global::Gtk.Table (((uint)(2)), ((uint)(2)), false);
			this.tableButtons.Name = "tableButtons";
			this.tableButtons.RowSpacing = ((uint)(6));
			this.tableButtons.ColumnSpacing = ((uint)(6));
			// Container child tableButtons.Gtk.Table+TableChild
			this.btnCheckIn = new global::Gtk.Button ();
			this.btnCheckIn.CanFocus = true;
			this.btnCheckIn.Name = "btnCheckIn";
			this.btnCheckIn.UseUnderline = true;
			// Container child btnCheckIn.Gtk.Container+ContainerChild
			global::Gtk.Alignment w13 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w14 = new global::Gtk.HBox ();
			w14.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w15 = new global::Gtk.Image ();
			w15.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-apply", global::Gtk.IconSize.Menu);
			w14.Add (w15);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w17 = new global::Gtk.Label ();
			w17.LabelProp = global::Mono.Unix.Catalog.GetString ("Check In Artist");
			w17.UseUnderline = true;
			w14.Add (w17);
			w13.Add (w14);
			this.btnCheckIn.Add (w13);
			this.tableButtons.Add (this.btnCheckIn);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.tableButtons [this.btnCheckIn]));
			w21.TopAttach = ((uint)(1));
			w21.BottomAttach = ((uint)(2));
			w21.LeftAttach = ((uint)(1));
			w21.RightAttach = ((uint)(2));
			w21.YPadding = ((uint)(8));
			w21.XOptions = ((global::Gtk.AttachOptions)(4));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableButtons.Gtk.Table+TableChild
			this.btnEdit = new global::Gtk.Button ();
			this.btnEdit.CanFocus = true;
			this.btnEdit.Name = "btnEdit";
			this.btnEdit.UseUnderline = true;
			// Container child btnEdit.Gtk.Container+ContainerChild
			global::Gtk.Alignment w22 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w23 = new global::Gtk.HBox ();
			w23.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w24 = new global::Gtk.Image ();
			w24.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-index", global::Gtk.IconSize.Menu);
			w23.Add (w24);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w26 = new global::Gtk.Label ();
			w26.LabelProp = global::Mono.Unix.Catalog.GetString ("Manage Merchandise");
			w26.UseUnderline = true;
			w23.Add (w26);
			w22.Add (w23);
			this.btnEdit.Add (w22);
			this.tableButtons.Add (this.btnEdit);
			global::Gtk.Table.TableChild w30 = ((global::Gtk.Table.TableChild)(this.tableButtons [this.btnEdit]));
			w30.TopAttach = ((uint)(1));
			w30.BottomAttach = ((uint)(2));
			w30.YPadding = ((uint)(8));
			w30.XOptions = ((global::Gtk.AttachOptions)(4));
			w30.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableButtons.Gtk.Table+TableChild
			this.btnRefresh = new global::Gtk.Button ();
			this.btnRefresh.CanFocus = true;
			this.btnRefresh.Name = "btnRefresh";
			this.btnRefresh.UseUnderline = true;
			// Container child btnRefresh.Gtk.Container+ContainerChild
			global::Gtk.Alignment w31 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w32 = new global::Gtk.HBox ();
			w32.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w33 = new global::Gtk.Image ();
			w33.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-refresh", global::Gtk.IconSize.Menu);
			w32.Add (w33);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w35 = new global::Gtk.Label ();
			w35.LabelProp = global::Mono.Unix.Catalog.GetString ("Refresh Info");
			w35.UseUnderline = true;
			w32.Add (w35);
			w31.Add (w32);
			this.btnRefresh.Add (w31);
			this.tableButtons.Add (this.btnRefresh);
			global::Gtk.Table.TableChild w39 = ((global::Gtk.Table.TableChild)(this.tableButtons [this.btnRefresh]));
			w39.LeftAttach = ((uint)(1));
			w39.RightAttach = ((uint)(2));
			w39.XOptions = ((global::Gtk.AttachOptions)(4));
			w39.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableButtons.Gtk.Table+TableChild
			this.chkGSCS = new global::Gtk.CheckButton ();
			this.chkGSCS.CanFocus = true;
			this.chkGSCS.Name = "chkGSCS";
			this.chkGSCS.Label = global::Mono.Unix.Catalog.GetString ("Yes");
			this.chkGSCS.DrawIndicator = true;
			this.chkGSCS.UseUnderline = true;
			this.tableButtons.Add (this.chkGSCS);
			global::Gtk.Table.TableChild w40 = ((global::Gtk.Table.TableChild)(this.tableButtons [this.chkGSCS]));
			w40.XOptions = ((global::Gtk.AttachOptions)(4));
			w40.YOptions = ((global::Gtk.AttachOptions)(4));
			this.hboxButtons.Add (this.tableButtons);
			global::Gtk.Box.BoxChild w41 = ((global::Gtk.Box.BoxChild)(this.hboxButtons [this.tableButtons]));
			w41.Position = 0;
			w41.Expand = false;
			w41.Fill = false;
			this.vboxInfo.Add (this.hboxButtons);
			global::Gtk.Box.BoxChild w42 = ((global::Gtk.Box.BoxChild)(this.vboxInfo [this.hboxButtons]));
			w42.Position = 6;
			w42.Expand = false;
			w42.Fill = false;
			this.hboxCheckin.Add (this.vboxInfo);
			global::Gtk.Box.BoxChild w43 = ((global::Gtk.Box.BoxChild)(this.hboxCheckin [this.vboxInfo]));
			w43.Position = 1;
			w43.Expand = false;
			w43.Fill = false;
			w43.Padding = ((uint)(8));
			this.Add (this.hboxCheckin);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 900;
			this.DefaultHeight = 350;
			this.Show ();
			this.btnCheckIn.Clicked += new global::System.EventHandler (this.OnBtnCheckInClicked);
		}
	}
}
